<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yonchain.ai.plugin.mapper.PluginInstallationMapper">

    <!-- 插件安装记录结果映射 -->
    <resultMap id="PluginInstallationResultMap" type="com.yonchain.ai.plugin.entity.PluginInstallation">
        <id property="id" column="id"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="tenantId" column="tenant_id"/>
        <result property="pluginId" column="plugin_id"/>
        <result property="pluginUniqueIdentifier" column="plugin_unique_identifier"/>
        <result property="runtimeType" column="runtime_type"/>
        <result property="endpointsSetups" column="endpoints_setups"/>
        <result property="endpointsActive" column="endpoints_active"/>
        <result property="source" column="source"/>
        <result property="meta" column="meta"/>
    </resultMap>

    <!-- 插件实体结果映射 -->
    <resultMap id="PluginEntityResultMap" type="com.yonchain.ai.plugin.entity.PluginEntity">
        <result property="pluginId" column="plugin_id"/>
        <result property="name" column="name"/>
        <result property="version" column="version"/>
        <result property="description" column="description"/>
        <result property="author" column="author"/>
        <result property="homepage" column="homepage"/>
        <result property="type" column="type"/>
        <result property="status" column="status"/>
        <result property="pluginPath" column="plugin_path"/>
        <result property="mainClass" column="main_class"/>
        <result property="providerSource" column="provider_source"/>
        <result property="providerInterface" column="provider_interface"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="installedAt" column="installed_at"/>
        <result property="enabledAt" column="enabled_at"/>
        <result property="disabledAt" column="disabled_at"/>
        <result property="iconPath" column="icon_path"/>
    </resultMap>

    <!-- 插入插件安装记录 -->
    <insert id="insert" parameterType="com.yonchain.ai.plugin.entity.PluginInstallation">
        INSERT INTO plugin_installation (
            id, created_at, updated_at, tenant_id, plugin_id, plugin_unique_identifier, 
            runtime_type, endpoints_setups, endpoints_active, source, meta
        ) VALUES (
            #{id}::uuid, #{createdAt}, #{updatedAt}, #{tenantId}::uuid, #{pluginId}, 
            #{pluginUniqueIdentifier}, #{runtimeType}, #{endpointsSetups}, #{endpointsActive}, 
            #{source}, #{meta}
        )
    </insert>

    <!-- 根据ID查询插件安装记录 -->
    <select id="findById" parameterType="string" resultMap="PluginInstallationResultMap">
        SELECT * FROM plugin_installation WHERE id = #{id}::uuid
    </select>

    <!-- 根据租户ID查询插件安装记录列表 -->
    <select id="findByTenantId" parameterType="string" resultMap="PluginInstallationResultMap">
        SELECT * FROM plugin_installation 
        WHERE tenant_id = #{tenantId}::uuid 
        ORDER BY created_at DESC
    </select>

    <!-- 根据插件ID查询插件安装记录列表 -->
    <select id="findByPluginId" parameterType="string" resultMap="PluginInstallationResultMap">
        SELECT * FROM plugin_installation 
        WHERE plugin_id = #{pluginId} 
        ORDER BY created_at DESC
    </select>

    <!-- 根据租户ID和插件ID查询插件安装记录 -->
    <select id="findByTenantIdAndPluginId" resultMap="PluginInstallationResultMap">
        SELECT * FROM plugin_installation 
        WHERE tenant_id = #{tenantId}::uuid AND plugin_id = #{pluginId}
    </select>

    <!-- 根据插件唯一标识符查询插件安装记录 -->
    <select id="findByPluginUniqueIdentifier" parameterType="string" resultMap="PluginInstallationResultMap">
        SELECT * FROM plugin_installation 
        WHERE plugin_unique_identifier = #{pluginUniqueIdentifier}
    </select>

    <!-- 根据运行时类型查询插件安装记录列表 -->
    <select id="findByRuntimeType" parameterType="string" resultMap="PluginInstallationResultMap">
        SELECT * FROM plugin_installation 
        WHERE runtime_type = #{runtimeType} 
        ORDER BY created_at DESC
    </select>

    <!-- 根据租户ID和运行时类型查询插件安装记录列表 -->
    <select id="findByTenantIdAndRuntimeType" resultMap="PluginInstallationResultMap">
        SELECT * FROM plugin_installation 
        WHERE tenant_id = #{tenantId}::uuid AND runtime_type = #{runtimeType} 
        ORDER BY created_at DESC
    </select>

    <!-- 查询所有插件安装记录 -->
    <select id="findAll" resultMap="PluginInstallationResultMap">
        SELECT * FROM plugin_installation ORDER BY created_at DESC
    </select>

    <!-- 更新端点数量 -->
    <update id="updateEndpoints">
        UPDATE plugin_installation 
        SET endpoints_setups = #{endpointsSetups}, endpoints_active = #{endpointsActive}, updated_at = #{updatedAt} 
        WHERE id = #{id}::uuid
    </update>

    <!-- 更新元数据 -->
    <update id="updateMeta">
        UPDATE plugin_installation 
        SET meta = #{meta}, updated_at = #{updatedAt} 
        WHERE id = #{id}::uuid
    </update>

    <!-- 更新插件安装记录（完整更新） -->
    <update id="update" parameterType="com.yonchain.ai.plugin.entity.PluginInstallation">
        UPDATE plugin_installation SET 
            tenant_id = #{tenantId}::uuid, 
            plugin_id = #{pluginId}, 
            plugin_unique_identifier = #{pluginUniqueIdentifier}, 
            runtime_type = #{runtimeType}, 
            endpoints_setups = #{endpointsSetups}, 
            endpoints_active = #{endpointsActive}, 
            source = #{source}, 
            meta = #{meta}, 
            updated_at = #{updatedAt} 
        WHERE id = #{id}::uuid
    </update>

    <!-- 根据ID删除插件安装记录 -->
    <delete id="deleteById" parameterType="string">
        DELETE FROM plugin_installation WHERE id = #{id}::uuid
    </delete>

    <!-- 根据租户ID删除插件安装记录 -->
    <delete id="deleteByTenantId" parameterType="string">
        DELETE FROM plugin_installation WHERE tenant_id = #{tenantId}::uuid
    </delete>

    <!-- 根据插件ID删除插件安装记录 -->
    <delete id="deleteByPluginId" parameterType="string">
        DELETE FROM plugin_installation WHERE plugin_id = #{pluginId}
    </delete>

    <!-- 根据租户ID和插件ID删除插件安装记录 -->
    <delete id="deleteByTenantIdAndPluginId">
        DELETE FROM plugin_installation 
        WHERE tenant_id = #{tenantId}::uuid AND plugin_id = #{pluginId}
    </delete>

    <!-- 统计插件安装记录总数 -->
    <select id="count" resultType="long">
        SELECT COUNT(*) FROM plugin_installation
    </select>

    <!-- 根据租户ID统计插件安装记录数量 -->
    <select id="countByTenantId" parameterType="string" resultType="long">
        SELECT COUNT(*) FROM plugin_installation WHERE tenant_id = #{tenantId}::uuid
    </select>

    <!-- 根据插件ID统计插件安装记录数量 -->
    <select id="countByPluginId" parameterType="string" resultType="long">
        SELECT COUNT(*) FROM plugin_installation WHERE plugin_id = #{pluginId}
    </select>

    <!-- 检查记录是否存在 -->
    <select id="existsById" parameterType="string" resultType="boolean">
        SELECT COUNT(*) > 0 FROM plugin_installation WHERE id = #{id}::uuid
    </select>

    <!-- 检查租户和插件组合是否存在 -->
    <select id="existsByTenantIdAndPluginId" resultType="boolean">
        SELECT COUNT(*) > 0 FROM plugin_installation 
        WHERE tenant_id = #{tenantId}::uuid AND plugin_id = #{pluginId}
    </select>

    <!-- 检查插件唯一标识符是否存在 -->
    <select id="existsByPluginUniqueIdentifier" parameterType="string" resultType="boolean">
        SELECT COUNT(*) > 0 FROM plugin_installation 
        WHERE plugin_unique_identifier = #{pluginUniqueIdentifier}
    </select>

    <!-- 根据租户ID关联查询插件信息 -->
    <select id="findTenantPluginsByTenantId" parameterType="string" resultMap="PluginEntityResultMap">
        SELECT p.plugin_id, p.name, p.version, p.description, p.author, p.homepage, 
               p.type, p.status, p.plugin_path, p.main_class, p.provider_source, p.provider_interface, 
               p.created_at, p.updated_at, p.installed_at, p.enabled_at, p.disabled_at, p.icon_path 
        FROM plugin p 
        INNER JOIN plugin_installation pi ON p.plugin_id = pi.plugin_id 
        WHERE pi.tenant_id = #{tenantId}::uuid 
        ORDER BY pi.created_at DESC
    </select>

    <!-- 根据租户ID分页查询插件信息（带条件） -->
    <select id="findTenantPluginsByTenantIdWithConditions" resultMap="PluginEntityResultMap">
        SELECT p.plugin_id, p.name, p.version, p.description, p.author, p.homepage, 
               p.type, p.status, p.plugin_path, p.main_class, p.provider_source, p.provider_interface, 
               p.created_at, p.updated_at, p.installed_at, p.enabled_at, p.disabled_at, p.icon_path 
        FROM plugin p 
        INNER JOIN plugin_installation pi ON p.plugin_id = pi.plugin_id 
        WHERE pi.tenant_id = #{tenantId}::uuid
        <if test="status != null and status != ''">
            AND p.status = #{status}
        </if>
        <if test="type != null and type != ''">
            AND p.type = #{type}
        </if>
        <if test="name != null and name != ''">
            AND p.name LIKE CONCAT('%', #{name}, '%')
        </if>
        ORDER BY pi.created_at DESC
        <if test="pageNum != null and pageSize != null">
            LIMIT #{pageSize} OFFSET #{offset}
        </if>
    </select>

    <!-- 统计租户插件数量（带条件） -->
    <select id="countTenantPluginsByTenantIdWithConditions" resultType="long">
        SELECT COUNT(*) 
        FROM plugin p 
        INNER JOIN plugin_installation pi ON p.plugin_id = pi.plugin_id 
        WHERE pi.tenant_id = #{tenantId}::uuid
        <if test="status != null and status != ''">
            AND p.status = #{status}
        </if>
        <if test="type != null and type != ''">
            AND p.type = #{type}
        </if>
        <if test="name != null and name != ''">
            AND p.name LIKE CONCAT('%', #{name}, '%')
        </if>
    </select>

</mapper>
