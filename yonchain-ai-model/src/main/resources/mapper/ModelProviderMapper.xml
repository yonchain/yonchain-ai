<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yonchain.ai.model.mapper.ModelProviderMapper">
    
    <!-- 基础结果映射 -->
    <resultMap id="BaseResultMap" type="com.yonchain.ai.model.entity.ModelProvider">
        <!-- 主键ID -->
        <id column="id" property="id" jdbcType="BIGINT" />
        <!-- 提供商代码 -->
        <result column="code" property="code" jdbcType="VARCHAR" />
        <!-- 提供商名称 -->
        <result column="name" property="name" jdbcType="VARCHAR" />
        <!-- 提供商描述 -->
        <result column="description" property="description" jdbcType="VARCHAR" />
        <!-- 提供商图标 -->
        <result column="icon" property="icon" jdbcType="VARCHAR" />
        <!-- 官方网站URL -->
        <result column="website_url" property="websiteUrl" jdbcType="VARCHAR" />
        <!-- 排序权重 -->
        <result column="sort_order" property="sortOrder" jdbcType="INTEGER" />
        <!-- 支持的模型类型 -->
        <result column="supported_model_types" property="supportedModelTypes" jdbcType="VARCHAR" />
        <!-- 配置参数Schema -->
        <result column="config_schema" property="configSchema" jdbcType="VARCHAR" />
        <!-- 是否启用 -->
        <result column="enabled" property="enabled" jdbcType="BOOLEAN" />
        <!-- 创建时间 -->
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
        <!-- 更新时间 -->
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
        <!-- 创建者 -->
        <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
        <!-- 更新者 -->
        <result column="updated_by" property="updatedBy" jdbcType="VARCHAR" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, code, name, description, icon, website_url, sort_order, 
        supported_model_types, config_schema, enabled, 
        created_at, updated_at, created_by, updated_by
    </sql>

    <!-- 根据ID查询模型提供商 -->
    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM model_provider
        WHERE id = #{id}
    </select>

    <!-- 根据代码查询模型提供商 -->
    <select id="selectByCode" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM model_provider
        WHERE code = #{code}
    </select>

    <!-- 查询所有启用的模型提供商 -->
    <select id="selectEnabled" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM model_provider
        WHERE enabled = true
        ORDER BY sort_order ASC, created_at DESC
    </select>

    <!-- 分页查询模型提供商 -->
    <select id="selectList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM model_provider
        <where>
            <if test="code != null and code != ''">
                AND code LIKE CONCAT('%', #{code}, '%')
            </if>
            <if test="name != null and name != ''">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="enabled != null">
                AND enabled = #{enabled}
            </if>
        </where>
        ORDER BY sort_order ASC, created_at DESC
    </select>

    <!-- 插入模型提供商 -->
    <insert id="insert" parameterType="com.yonchain.ai.model.entity.ModelProvider" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO model_provider (
            code, name, description, icon, website_url, sort_order,
            supported_model_types, config_schema, enabled,
            created_at, updated_at, created_by, updated_by
        )
        VALUES (
            #{code}, #{name}, #{description}, #{icon}, #{websiteUrl}, #{sortOrder},
            #{supportedModelTypes}, #{configSchema}, #{enabled},
            #{createdAt}, #{updatedAt}, #{createdBy}, #{updatedBy}
        )
    </insert>

    <!-- 更新模型提供商 -->
    <update id="update" parameterType="com.yonchain.ai.model.entity.ModelProvider">
        UPDATE model_provider
        SET code = #{code},
            name = #{name},
            description = #{description},
            icon = #{icon},
            website_url = #{websiteUrl},
            sort_order = #{sortOrder},
            supported_model_types = #{supportedModelTypes},
            config_schema = #{configSchema},
            enabled = #{enabled},
            updated_at = #{updatedAt},
            updated_by = #{updatedBy}
        WHERE id = #{id}
    </update>

    <!-- 根据ID删除模型提供商 -->
    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM model_provider
        WHERE id = #{id}
    </delete>

    <!-- 批量删除模型提供商 -->
    <delete id="batchDelete">
        DELETE FROM model_provider
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 更新启用状态 -->
    <update id="updateEnabled">
        UPDATE model_provider
        SET enabled = #{enabled},
            updated_at = #{updatedAt},
            updated_by = #{updatedBy}
        WHERE id = #{id}
    </update>

    <!-- 统计模型提供商数量 -->
    <select id="count" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM model_provider
        <where>
            <if test="enabled != null">
                AND enabled = #{enabled}
            </if>
        </where>
    </select>

</mapper>