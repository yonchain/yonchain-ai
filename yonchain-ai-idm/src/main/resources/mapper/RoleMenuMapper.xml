<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yonchain.ai.idm.mapper.RoleMenuMapper">

    <resultMap id="BaseResultMap" type="com.yonchain.ai.idm.entity.RoleMenuEntity">
        <id column="id" property="id" jdbcType="OTHER"/>
        <result column="menu_id" property="menuId" jdbcType="OTHER"/>
        <result column="role_id" property="roleId" jdbcType="OTHER"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, menu_id, role_id, created_at
    </sql>

    <select id="selectById" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM role_menu
        WHERE id = #{id}::uuid
    </select>

    <select id="selectList" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM role_menu
        <where>
            <if test="params.menuId != null">
                AND menu_id = #{params.menuId}::uuid
            </if>
            <if test="params.roleId != null">
                AND role_id = #{params.roleId}::uuid
            </if>
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO role_menu(id,menu_id, role_id)
        VALUES(#{id}::uuid,#{menuId}::uuid, #{roleId}::uuid)
    </insert>

    <delete id="deleteById">
        DELETE FROM role_menu WHERE id = #{id}::uuid
    </delete>

    <delete id="deleteByMenuId">
        DELETE FROM role_menu WHERE menu_id = #{menuId}::uuid
    </delete>

    <delete id="deleteByRoleId">
        DELETE FROM role_menu WHERE role_id = #{roleId}::uuid
    </delete>

    <select id="selectMenuIdsByRoleId" resultType="java.lang.String">
        SELECT menu_id FROM role_menu WHERE role_id = #{roleId}::uuid
    </select>

    <select id="selectRoleIdsByMenuId" resultType="java.lang.String">
        SELECT role_id FROM role_menu WHERE menu_id = #{menuId}::uuid
    </select>

    <insert id="batchInsert">
        INSERT INTO role_menu(id, menu_id, role_id, created_at)
        VALUES
        <foreach collection="menuIds" item="menuId" separator=",">
            (gen_random_uuid()::uuid, #{menuId}::uuid, #{roleId}::uuid, now())
        </foreach>
    </insert>

</mapper>