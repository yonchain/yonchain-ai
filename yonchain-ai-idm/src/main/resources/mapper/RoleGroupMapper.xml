<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yonchain.ai.idm.mapper.RoleGroupMapper">

    <resultMap id="BaseResultMap" type="com.yonchain.ai.idm.entity.RoleGroupEntity">
        <id column="id" property="id" jdbcType="OTHER" />
        <!-- 租户ID，可为空 -->
        <result column="tenant_id" property="tenantId" jdbcType="OTHER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="created_by" property="createdBy" jdbcType="OTHER" />
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
        <result column="updated_by" property="updatedBy" jdbcType="OTHER" />
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    </resultMap>

    <sql id="Base_Column_List">
        id, tenant_id,name, created_by, created_at, updated_by, updated_at
    </sql>

    <select id="selectById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM role_group
        WHERE id = #{id}::uuid
    </select>

    <select id="selectList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM role_group
        <where>
            <if test="params.name != null and params.name != ''">
                AND name LIKE CONCAT('%', #{params.name}, '%')
            </if>
        </where>
        ORDER BY created_at DESC
    </select>

    <insert id="insert" >
        INSERT INTO role_group (
            id, tenant_id,name, created_by, created_at
        ) VALUES (
            #{id}::uuid,
            #{tenantId}::uuid,
            #{name},
            #{createdBy}::uuid,
            #{createdAt}
        )
    </insert>

    <update id="update" >
        UPDATE role_group
        SET
            name = #{name},
            updated_by = #{updatedBy}::uuid,
            updated_at = #{updatedAt}
        WHERE id = #{id}::uuid
    </update>

    <delete id="deleteById">
        DELETE FROM role_group
        WHERE id = #{id}::uuid
    </delete>
</mapper>
